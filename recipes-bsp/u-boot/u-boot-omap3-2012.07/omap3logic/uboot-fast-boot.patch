diff --git a/include/configs/omap3_logic.h b/include/configs/omap3_logic.h
--- a/include/configs/omap3_logic.h
+++ b/include/configs/omap3_logic.h
@@ -34,10 +34,6 @@
 #define CONFIG_OMAP34XX			/* which is a 34XX */
 #define CONFIG_OMAP3_LOGIC		/* working with Logic OMAP boards */
 
-#undef CONFIG_USE_IRQ			/* no support for IRQs */
-
-#define CONFIG_SYS_TEXT_BASE	0x80400000
-
 #define CONFIG_SDRC	/* The chip has SDRC controller */
 
 #include <asm/arch/cpu.h>	/* get chip and board defs */
@@ -53,15 +49,17 @@
 #define V_OSCK			26000000	/* Clock output from T2 */
 #define V_SCLK			(V_OSCK >> 1)
 
-#define CONFIG_MISC_INIT_R		/* misc_init_r dumps the die id */
+#undef CONFIG_USE_IRQ			/* no support for IRQs */
+#define CONFIG_MISC_INIT_R
+#define CONFIG_BOARD_LATE_INIT
 
 #define CONFIG_CMDLINE_TAG			/* enable passing of ATAGs */
 #define CONFIG_SETUP_MEMORY_TAGS
 #define CONFIG_INITRD_TAG
 #define CONFIG_REVISION_TAG
 
-#define CONFIG_CMDLINE_EDITING			/* cmd line edit/history */
-#define CONFIG_ZERO_BOOTDELAY_CHECK		/* check keypress w/no delay */
+#define CONFIG_OF_LIBFDT
+#undef CONFIG_ZERO_BOOTDELAY_CHECK		/* disable: check keypress w/no delay */
 
 /*
  * Size of malloc() pool
@@ -108,40 +106,25 @@
 #define CONFIG_CMD_EXT2		/* EXT2 Support			*/
 #define CONFIG_CMD_FAT		/* FAT support			*/
 #define CONFIG_CMD_JFFS2	/* JFFS2 Support		*/
-#define CONFIG_CMD_MTDPARTS	/* Enable MTD parts commands */
-#define CONFIG_MTD_DEVICE	/* needed for mtdparts commands */
-#define MTDIDS_DEFAULT			"nand0=omap2-nand.0"
-#define MTDPARTS_DEFAULT		"mtdparts=omap2-nand.0:512k(x-loader),"\
-					"1920k(u-boot),128k(u-boot-env),"\
-					"4m(kernel),-(fs)"
 
 #define CONFIG_CMD_I2C		/* I2C serial bus support	*/
 #define CONFIG_CMD_MMC		/* MMC support			*/
 #define CONFIG_CMD_NAND		/* NAND support			*/
-#define CONFIG_CMD_NAND_LOCK_UNLOCK	/* nand (un)lock commands	*/
-#define CONFIG_CMD_NET      /* bootp, tftpboot, rarpboot    */
-#define CONFIG_CMD_PING
-#define CONFIG_CMD_DHCP
-#define CONFIG_CMD_SETEXPR	/* Evaluate expressions		*/
+#define CONFIG_CMD_NAND_LOCK_UNLOCK
 
 #undef CONFIG_CMD_FLASH		/* flinfo, erase, protect	*/
 #undef CONFIG_CMD_FPGA		/* FPGA configuration Support	*/
 #undef CONFIG_CMD_IMI		/* iminfo			*/
 #undef CONFIG_CMD_IMLS		/* List all found images	*/
+#undef CONFIG_CMD_NFS		/* NFS support			*/
+#define CONFIG_CMD_NET		/* bootp, tftpboot, rarpboot	*/
 
 #define CONFIG_SYS_NO_FLASH
-
-/*
- * I2C
- */
 #define CONFIG_HARD_I2C
-#define CONFIG_DRIVER_OMAP34XX_I2C
-
 #define CONFIG_SYS_I2C_SPEED		100000
 #define CONFIG_SYS_I2C_SLAVE		1
-#define CONFIG_SYS_I2C_BUS		0
-#define CONFIG_SYS_I2C_BUS_SELECT	1
 #define CONFIG_I2C_MULTI_BUS
+#define CONFIG_DRIVER_OMAP34XX_I2C
 
 /*
  * TWL4030
@@ -156,11 +139,12 @@
 #define CONFIG_SYS_NAND_ADDR		NAND_BASE	/* physical address */
 							/* to access nand */
 #define CONFIG_SYS_NAND_BASE		NAND_BASE	/* physical address */
-							/* to access nand at */
-							/* CS0 */
+							/* to access nand */
+							/* at CS0 */
+#define GPMC_NAND_ECC_LP_x16_LAYOUT
 
-#define CONFIG_SYS_MAX_NAND_DEVICE	1		/* Max number of */
-							/* NAND devices */
+#define CONFIG_SYS_MAX_NAND_DEVICE	1	/* Max number of NAND */
+						/* devices */
 #define CONFIG_JFFS2_NAND
 /* nand device jffs2 lives on */
 #define CONFIG_JFFS2_DEV		"nand0"
@@ -170,91 +154,62 @@
 							/* partition */
 
 /* Environment information */
-#define CONFIG_BOOTDELAY		2
-
-/*
- * PREBOOT assumes the 4.3" display is attached.  User can interrupt
- * and modify display variable to suit their needs.
- */
-#define CONFIG_PREBOOT \
-	"echo ======================NOTICE============================;"\
-	"echo \"The u-boot environment is not set.\";"			\
-	"echo \"If using a display a valid display varible for your panel\";" \
-	"echo \"needs to be set.\";"					\
-	"echo \"Valid display options are:\";"				\
-	"echo \"  2 == LQ121S1DG31     TFT SVGA    (12.1)  Sharp\";"	\
-	"echo \"  3 == LQ036Q1DA01     TFT QVGA    (3.6)   Sharp w/ASIC\";" \
-	"echo \"  5 == LQ064D343       TFT VGA     (6.4)   Sharp\";"	\
-	"echo \"  7 == LQ10D368        TFT VGA     (10.4)  Sharp\";"	\
-	"echo \" 15 == LQ043T1DG01     TFT WQVGA   (4.3)   Sharp (DEFAULT)\";" \
-	"echo \" vga[-dvi or -hdmi]    LCD VGA     640x480\";"          \
-	"echo \" svga[-dvi or -hdmi]   LCD SVGA    800x600\";"          \
-	"echo \" xga[-dvi or -hdmi]    LCD XGA     1024x768\";"         \
-	"echo \" 720p[-dvi or -hdmi]   LCD 720P    1280x720\";"         \
-	"echo \"Defaulting to 4.3 LCD panel (display=15).\";"		\
-	"setenv display 15;"						\
-	"setenv preboot;"						\
-	"saveenv;"
-
+#define CONFIG_BOOTDELAY		5
 
 #define CONFIG_EXTRA_ENV_SETTINGS \
-	"loadaddr=0x81000000\0" \
-	"bootfile=uImage\0" \
-	"mtdids=" MTDIDS_DEFAULT "\0"	\
-	"mtdparts=" MTDPARTS_DEFAULT "\0" \
+	"loadaddr=0x82000000\0" \
+	"console=ttyO0,115200n8\0" \
+	"mpurate=500\0" \
+	"optargs=\0" \
+	"vram=12M\0" \
+	"dvimode=1024x768MR-16@60\0" \
+	"defaultdisplay=dvi\0" \
 	"mmcdev=0\0" \
-	"autoboot=if mmc rescan ${mmcdev}; then " \
-			"if run loadbootscript; then " \
-				"run bootscript; " \
-			"else " \
-				"run defaultboot;" \
-			"fi; " \
-		"else run defaultboot; fi\0" \
-	"defaultboot=run mmcramboot\0" \
-	"consoledevice=ttyO0\0" \
-	"display=15\0" \
-	"setconsole=setenv console ${consoledevice},${baudrate}n8\0" \
-	"dump_bootargs=echo 'Bootargs: '; echo $bootargs\0" \
-	"rotation=0\0" \
-	"vrfb_arg=if itest ${rotation} -ne 0; then " \
-		"setenv bootargs ${bootargs} omapfb.vrfb=y " \
-		"omapfb.rotate=${rotation}; " \
-		"fi\0" \
-	"otherbootargs=ignore_loglevel early_printk no_console_suspend\0" \
-	"addmtdparts=setenv bootargs ${bootargs} ${mtdparts}\0" \
-	"common_bootargs=setenv bootargs ${bootargs} display=${display} " \
-		"${otherbootargs};" \
-		"run addmtdparts; " \
-		"run vrfb_arg\0" \
+	"mmcroot=/dev/mmcblk0p2 rw\0" \
+	"mmcrootfstype=ext3 rootwait\0" \
+	"nandroot=ubi0:rootfs ubi.mtd=4\0" \
+	"nandrootfstype=ubifs\0" \
+	"mmcargs=setenv bootargs console=${console} " \
+		"${optargs} " \
+		"mpurate=${mpurate} " \
+		"vram=${vram} " \
+		"omapfb.mode=dvi:${dvimode} " \
+		"omapdss.def_disp=${defaultdisplay} " \
+		"root=${mmcroot} " \
+		"rootfstype=${mmcrootfstype}\0" \
+	"nandargs=setenv bootargs console=${console} " \
+		"${optargs} " \
+		"mpurate=${mpurate} " \
+		"vram=${vram} " \
+		"omapfb.mode=dvi:${dvimode} " \
+		"omapdss.def_disp=${defaultdisplay} " \
+		"root=${nandroot} " \
+		"rootfstype=${nandrootfstype}\0" \
 	"loadbootscript=fatload mmc ${mmcdev} ${loadaddr} boot.scr\0" \
-	"bootscript=echo 'Running bootscript from mmc ...'; " \
+	"bootscript=echo Running bootscript from mmc ...; " \
 		"source ${loadaddr}\0" \
-	"loaduimage=mmc rescan ${mmcdev}; " \
-		"fatload mmc ${mmcdev} ${loadaddr} ${bootfile}\0" \
-	"ramdisksize=64000\0" \
-	"ramdiskaddr=0x82000000\0" \
-	"ramdiskimage=rootfs.ext2.gz.uboot\0" \
-	"ramargs=run setconsole; setenv bootargs console=${console} " \
-		"root=/dev/ram rw ramdisk_size=${ramdisksize}\0" \
-	"mmcramboot=echo 'Booting kernel from mmc w/ramdisk...'; " \
-		"run ramargs; " \
-		"run common_bootargs; " \
-		"run dump_bootargs; " \
-		"run loaduimage; " \
-		"fatload mmc ${mmcdev} ${ramdiskaddr} ${ramdiskimage}; "\
-		"bootm ${loadaddr} ${ramdiskaddr}\0" \
-	"ramboot=echo 'Booting kernel/ramdisk rootfs from tftp...'; " \
-		"run ramargs; " \
-		"run common_bootargs; " \
-		"run dump_bootargs; " \
-		"tftpboot ${loadaddr} ${bootfile}; "\
-		"tftpboot ${ramdiskaddr} ${ramdiskimage}; "\
-		"bootm ${loadaddr} ${ramdiskaddr}\0"
+	"loaduimage=fatload mmc ${mmcdev} ${loadaddr} uImage\0" \
+	"mmcboot=echo Booting from mmc ...; " \
+		"run mmcargs; " \
+		"bootm ${loadaddr}\0" \
+	"nandboot=echo Booting from nand ...; " \
+		"run nandargs; " \
+		"nand read ${loadaddr} 280000 400000; " \
+		"bootm ${loadaddr}\0" \
 
 #define CONFIG_BOOTCOMMAND \
-	"run autoboot"
+	"if mmc rescan ${mmcdev}; then " \
+		"if run loadbootscript; then " \
+			"run bootscript; " \
+		"else " \
+			"if run loaduimage; then " \
+				"run mmcboot; " \
+			"else run nandboot; " \
+			"fi; " \
+		"fi; " \
+	"else run nandboot; fi"
 
-#define CONFIG_AUTO_COMPLETE
+#define CONFIG_AUTO_COMPLETE	1
 /*
  * Miscellaneous configurable options
  */
@@ -265,9 +220,10 @@
 /* Print Buffer Size */
 #define CONFIG_SYS_PBSIZE		(CONFIG_SYS_CBSIZE + \
 					sizeof(CONFIG_SYS_PROMPT) + 16)
-#define CONFIG_SYS_MAXARGS		16	/* max number of command args */
+#define CONFIG_SYS_MAXARGS		16	/* max number of command */
+						/* args */
 /* Boot Argument Buffer Size */
-#define CONFIG_SYS_BARGSIZE		(CONFIG_SYS_CBSIZE)
+#define CONFIG_SYS_BARGSIZE		CONFIG_SYS_CBSIZE
 /* memtest works on */
 #define CONFIG_SYS_MEMTEST_START	(OMAP34XX_SDRC_CS0)
 #define CONFIG_SYS_MEMTEST_END		(OMAP34XX_SDRC_CS0 + \
@@ -275,31 +231,30 @@
 
 #define CONFIG_SYS_LOAD_ADDR		(OMAP34XX_SDRC_CS0) /* default load */
 								/* address */
-
 /*
  * OMAP3 has 12 GP timers, they can be driven by the system clock
  * (12/13/16.8/19.2/38.4MHz) or by 32KHz clock. We use 13MHz (V_SCLK).
  * This rate is divided by a local divisor.
  */
-#define CONFIG_SYS_TIMERBASE		(OMAP34XX_GPT2)
+#define CONFIG_SYS_TIMERBASE		OMAP34XX_GPT2
 #define CONFIG_SYS_PTV			2	/* Divisor: 2^(PTV+1) => 8 */
 #define CONFIG_SYS_HZ			1000
 
-/*
+/*-----------------------------------------------------------------------
  * Stack sizes
  *
  * The stack sizes are set up in start.S using the settings below
  */
 #define CONFIG_STACKSIZE	(128 << 10)	/* regular stack 128 KiB */
 
-/*
+/*-----------------------------------------------------------------------
  * Physical Memory Map
  */
 #define CONFIG_NR_DRAM_BANKS	2	/* CS1 may or may not be populated */
 #define PHYS_SDRAM_1		OMAP34XX_SDRC_CS0
 #define PHYS_SDRAM_2		OMAP34XX_SDRC_CS1
 
-/*
+/*-----------------------------------------------------------------------
  * FLASH and environment organization
  */
 
@@ -307,55 +262,206 @@
 
 /* Configure the PISMO */
 #define PISMO1_NAND_SIZE		GPMC_SIZE_128M
+#define PISMO1_ONEN_SIZE		GPMC_SIZE_128M
 
 #define CONFIG_SYS_MONITOR_LEN		(256 << 10)	/* Reserve 2 sectors */
 
 #if defined(CONFIG_CMD_NAND)
 #define CONFIG_SYS_FLASH_BASE		PISMO1_NAND_BASE
-#elif defined(CONFIG_CMD_ONENAND)
-#define CONFIG_SYS_FLASH_BASE		PISMO1_ONEN_BASE
 #endif
 
 /* Monitor at start of flash */
 #define CONFIG_SYS_MONITOR_BASE		CONFIG_SYS_FLASH_BASE
+#define CONFIG_SYS_ONENAND_BASE		ONENAND_MAP
 
-#define SMNAND_ENV_OFFSET		0x260000 /* environment starts here */
-
-#if defined(CONFIG_CMD_NAND)
-#define CONFIG_NAND_OMAP_GPMC
-#define GPMC_NAND_ECC_LP_x16_LAYOUT	1
 #define CONFIG_ENV_IS_IN_NAND
-#define CONFIG_ENV_OFFSET		SMNAND_ENV_OFFSET
-#endif
+#define ONENAND_ENV_OFFSET		0x240000 /* environment starts here */
+#define SMNAND_ENV_OFFSET		0x240000 /* environment starts here */
 
 #define CONFIG_SYS_ENV_SECT_SIZE	(128 << 10)	/* 128 KiB */
-#define CONFIG_ENV_ADDR			CONFIG_ENV_OFFSET
-
-#define CONFIG_SYS_SDRAM_BASE		PHYS_SDRAM_1
-#define CONFIG_SYS_INIT_RAM_ADDR	0x4020f800
-#define CONFIG_SYS_INIT_RAM_SIZE	0x800
-#define CONFIG_SYS_INIT_SP_ADDR		(CONFIG_SYS_INIT_RAM_ADDR + \
-					 CONFIG_SYS_INIT_RAM_SIZE - \
-					 GENERATED_GBL_DATA_SIZE)
+#define CONFIG_ENV_OFFSET		SMNAND_ENV_OFFSET
+#define CONFIG_ENV_ADDR			SMNAND_ENV_OFFSET
 
-/*
- * SMSC922x Ethernet
- */
 #if defined(CONFIG_CMD_NET)
+/*----------------------------------------------------------------------------
+ * SMSC9211 Ethernet from SMSC9118 family
+ *----------------------------------------------------------------------------
+ */
 
 #define CONFIG_SMC911X
-#define CONFIG_SMC911X_16_BIT
-#define CONFIG_SMC911X_BASE	0x08000000
+#define CONFIG_SMC911X_32_BIT
+#define CONFIG_SMC911X_BASE		0x2C000000
 
 #endif /* (CONFIG_CMD_NET) */
 
 /*
- * BOOTP fields
+ * Leave it at 0x80008000 to allow booting new u-boot.bin with X-loader
+ * and older u-boot.bin with the new U-Boot SPL.
  */
+#define CONFIG_SYS_TEXT_BASE		0x80008000
+#define CONFIG_SYS_SDRAM_BASE		PHYS_SDRAM_1
+#define CONFIG_SYS_INIT_RAM_ADDR	0x4020f800
+#define CONFIG_SYS_INIT_RAM_SIZE	0x800
+#define CONFIG_SYS_INIT_SP_ADDR		(CONFIG_SYS_INIT_RAM_ADDR + \
+					 CONFIG_SYS_INIT_RAM_SIZE - \
+					 GENERATED_GBL_DATA_SIZE)
+
+#define CONFIG_SYS_CACHELINE_SIZE	64
+
+/* Defines for SPL */
+#define CONFIG_SPL
+#define CONFIG_SPL_NAND_SIMPLE
+#define CONFIG_SPL_TEXT_BASE		0x40200800
+#define CONFIG_SPL_MAX_SIZE		(54 * 1024)	/* 8 KB for stack */
+#define CONFIG_SPL_STACK		LOW_LEVEL_SRAM_STACK
+
+/* move malloc and bss high to prevent clashing with the main image */
+#define CONFIG_SYS_SPL_MALLOC_START	0x87000000
+#define CONFIG_SYS_SPL_MALLOC_SIZE	0x80000
+#define CONFIG_SPL_BSS_START_ADDR	0x87080000	/* end of minimum RAM */
+#define CONFIG_SPL_BSS_MAX_SIZE		0x80000		/* 512 KB */
+
+#define CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR	0x300 /* address 0x60000 */
+#define CONFIG_SYS_U_BOOT_MAX_SIZE_SECTORS	0x200 /* 256 KB */
+#define CONFIG_SYS_MMC_SD_FAT_BOOT_PARTITION	1
+#define CONFIG_SPL_FAT_LOAD_PAYLOAD_NAME	"u-boot.img"
+
+#define CONFIG_SPL_BOARD_INIT
+#define CONFIG_SPL_LIBCOMMON_SUPPORT
+#define CONFIG_SPL_LIBDISK_SUPPORT
+#define CONFIG_SPL_I2C_SUPPORT
+#define CONFIG_SPL_LIBGENERIC_SUPPORT
+#define CONFIG_SPL_MMC_SUPPORT
+#define CONFIG_SPL_FAT_SUPPORT
+#define CONFIG_SPL_SERIAL_SUPPORT
+#define CONFIG_SPL_NAND_SUPPORT
+#define CONFIG_SPL_POWER_SUPPORT
+#define CONFIG_SPL_LDSCRIPT		"$(CPUDIR)/omap-common/u-boot-spl.lds"
+
+/* NAND boot config */
+#define CONFIG_SYS_NAND_5_ADDR_CYCLE
+#define CONFIG_SYS_NAND_PAGE_COUNT	64
+#define CONFIG_SYS_NAND_PAGE_SIZE	2048
+#define CONFIG_SYS_NAND_OOBSIZE		64
+#define CONFIG_SYS_NAND_BLOCK_SIZE	(128*1024)
+#define CONFIG_SYS_NAND_BAD_BLOCK_POS	NAND_LARGE_BADBLOCK_POS
+#define CONFIG_SYS_NAND_ECCPOS		{2, 3, 4, 5, 6, 7, 8, 9,\
+						10, 11, 12, 13}
+#define CONFIG_SYS_NAND_ECCSIZE		512
+#define CONFIG_SYS_NAND_ECCBYTES	3
+#define CONFIG_SYS_NAND_U_BOOT_START	CONFIG_SYS_TEXT_BASE
+#define CONFIG_SYS_NAND_U_BOOT_OFFS	0x80000
+
+
+/*#define CONFIG_FAST_BOOT*/
+/*#define CONFIG_FAST_BOOT_MMC*/
+/*#define CONFIG_FAST_BOOT_NAND*/
+
+#ifdef CONFIG_FAST_BOOT
+
+	#define CONFIG_SILENT_CONSOLE	1
+	#define CONFIG_ENV_IS_NOWHERE  	1
+	#undef CONFIG_ENV_IS_IN_NAND
+
+	#undef CONFIG_SYS_LONGHELP 
+	#undef CONFIG_AUTO_COMPLETE
+	#undef CONFIG_SYS_HUSH_PARSER 
+	#undef CONFIG_REVISION_TAG 
+	#undef CONFIG_MD5 
+	#undef CONFIG_SHA1 
+	#undef CONFIG_BZIP2 
+	#undef CONFIG_LZMA 
+
+	#undef CONFIG_CMD_BDI 
+	#undef CONFIG_CMD_BOOTD 
+	#undef CONFIG_CMD_CONSOLE 
+	#undef CONFIG_CMD_ECHO 
+	#undef CONFIG_CMD_EDITENV 
+	#undef CONFIG_CMD_FPGA 
+	#undef CONFIG_CMD_FLASH 
+	#undef CONFIG_CMD_IMI 
+	#undef CONFIG_CMD_IMLS 
+	#undef CONFIG_CMD_ITEST 
+	#undef CONFIG_CMD_LOADB 
+	#undef CONFIG_CMD_LOADS 
+	#undef CONFIG_CMD_MEMORY
+	#undef CONFIG_CMD_MISC
+/*	#undef CONFIG_CMD_NET -- Doesn't work for some reason. Give some linker errors */
+	#undef CONFIG_CMD_NFS 
+	#undef CONFIG_CMD_SETGETDCR 
+	#undef CONFIG_CMD_SOURCE 
+	#undef CONFIG_CMD_XIMG 
+
+	#undef CONFIG_CMD_EXT2 
+	#undef CONFIG_CMD_JFFS2
+	#undef CONFIG_CMD_USB 
+	#undef CONFIG_NET_MULTI 
+	#undef CONFIG_SMC911X 
+	#undef CONFIG_OF_LIBFDT 
+	#undef CONFIG_FIT 	
+
+	#undef CONFIG_EXTRA_ENV_SETTINGS 
+	#define CONFIG_EXTRA_ENV_SETTINGS \
+	 "verify=no\0" \
+	 "bootfile=uImage\0" 
+
+	#undef CONFIG_BOOTDELAY 
+	#define CONFIG_BOOTDELAY	0 
+
+	#ifdef CONFIG_FAST_BOOT_MMC
+		#undef CONFIG_SYS_NAND_QUIET_TEST
+		#undef CONFIG_NAND_OMAP_GPMC 		 
+		#undef CONFIG_CMD_NAND 
+		#undef CONFIG_SPL_NAND_SUPPORT		
+		#undef CONFIG_CMD_NAND_LOCK_UNLOCK
+		
+		#undef CONFIG_BOOTCOMMAND 
+		#define CONFIG_BOOTCOMMAND	 \
+			"mmc rescan 0; "	 \
+			"fatload mmc 0 0x82000000 uImage; "	\
+			"bootm 0x82000000;" 
+		 
+		#undef CONFIG_BOOTARGS 
+		#define CONFIG_BOOTARGS	 \
+			"console=ttyO0,115200n8 "	\
+			"mpurate=600 "			\
+			"quiet noinitrd "		\
+			"root=/dev/mmcblk0p2 rw "	\
+			"rootfstype=ext3 rootwait " 
+	#else
+		#undef CONFIG_OMAP3_MMC
+		#undef CONFIG_CMD_MMC		
+		/*#undef CONFIG_CMD_FAT*/
+		/* #undef CONFIG_DOS_PARTITION */
+
+		#undef CONFIG_BOOTCOMMAND
+		#define CONFIG_BOOTCOMMAND		\
+			"nand read 0x82000000 280000 280000; " \
+			"bootm 0x82000000;"
+
+		#undef CONFIG_BOOTARGS
+		#define CONFIG_BOOTARGS			\
+			"console=ttyO0,115200n8 "	\
+			"mpurate=600 "			\
+			"quiet noinitrd "		\
+			"root=ubi0:rootfs ubi.mtd=4 "	\
+			"rootfstype=ubifs "
+	#endif 	/* #ifdef CONFIG_FAST_BOOT_MMC  */
+	
+	
+	#undef CONFIG_USB_OMAP3 
+	#undef CONFIG_MUSB_HCD 
+	 
+	#undef CONFIG_USB_STORAGE 
+	#undef CONFIG_USB_KEYBOARD 
+	#undef CONFIG_SYS_USB_EVENT_POLL
+	#undef CONFIG_PREBOOT 
+	 
+	#undef CONFIG_MUSB_UDC 
+	#undef CONFIG_USB_DEVICE 
+	#undef CONFIG_USB_TTY 
+
+#endif   /* CONFIG_FAST_BOOT */
 
-#define CONFIG_BOOTP_SUBNETMASK		0x00000001
-#define CONFIG_BOOTP_GATEWAY		0x00000002
-#define CONFIG_BOOTP_HOSTNAME		0x00000004
-#define CONFIG_BOOTP_BOOTPATH		0x00000010
 
 #endif /* __CONFIG_H */
